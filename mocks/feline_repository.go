// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	feline "github.com/wallacetm/go-dev-skills/model/feline"
)

// FelineRepository is an autogenerated mock type for the FelineRepository type
type FelineRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *FelineRepository) GetAll() []feline.Feline {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAll")
	}

	var r0 []feline.Feline
	if rf, ok := ret.Get(0).(func() []feline.Feline); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]feline.Feline)
		}
	}

	return r0
}

// NewFelineRepository creates a new instance of FelineRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFelineRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *FelineRepository {
	mock := &FelineRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
