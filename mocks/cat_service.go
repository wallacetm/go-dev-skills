// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	feline "github.com/wallacetm/go-dev-skills/model/feline"
)

// CatService is an autogenerated mock type for the CatService type
type CatService struct {
	mock.Mock
}

// GetAllCatsAsFelines provides a mock function with given fields:
func (_m *CatService) GetAllCatsAsFelines() []feline.Feline {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAllCatsAsFelines")
	}

	var r0 []feline.Feline
	if rf, ok := ret.Get(0).(func() []feline.Feline); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]feline.Feline)
		}
	}

	return r0
}

// NewCatService creates a new instance of CatService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCatService(t interface {
	mock.TestingT
	Cleanup(func())
}) *CatService {
	mock := &CatService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
